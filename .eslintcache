[{"C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\index.js":"1","C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\reportWebVitals.js":"2","C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\App.js":"3","C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\Components\\Register\\Register.js":"4","C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\Components\\Firebase\\Base.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":178,"mtime":1615371107340,"results":"9","hashOfConfig":"7"},{"size":7496,"mtime":1615384331562,"results":"10","hashOfConfig":"7"},{"size":446,"mtime":1615370660768,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1yxknf2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\index.js",[],["25","26"],"C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\reportWebVitals.js",[],"C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\App.js",[],"C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\Components\\Register\\Register.js",["27","28"],"import React, { useEffect, useState } from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport { Button, Input } from 'antd'\r\nimport './Register.css'\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { app } from '../Firebase/Base'\r\n\r\nconst db = app.firestore()\r\nconst newUser = app.firestore().collection(\"users\")\r\nfunction Register() {\r\n\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [bio, setBio] = useState(\"\")\r\n  // const [photoFileURL, setphotoFileURL] = useState(null)\r\n  const [hasAccount, setHasAccount] = useState(false)\r\n  const [current, setCurrent] = useState(null)\r\n  const [collectFiles, setcollectFiles] = useState([])\r\n\r\n\r\n  // const uploadImage = async (e) => {\r\n  //   const file = e.target.files[0]\r\n  //   const fileRef = app.storage().ref()\r\n  //   const storageRef = fileRef.child(file.name)\r\n  //   await storageRef.put(file)\r\n  //   setphotoFileURL(await storageRef.getDownloadURL())\r\n  // }\r\n\r\n\r\n  const handleLogin = () => {\r\n    app.auth().signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const handleSignUp = async () => {\r\n    const bestUser = await app\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n    // app.auth().currentUser.updateProfile({\r\n    //   displayName: name\r\n    // })\r\n\r\n    await newUser.doc(bestUser.user.uid).set({\r\n      name,\r\n      password,\r\n      email,\r\n      bio\r\n      // avatar: await photoFileURL\r\n    })\r\n\r\n  }\r\n\r\n  const getData = async () => {\r\n    await newUser\r\n      .onSnapshot((snap) => {\r\n        const item = []\r\n        snap.forEach((doc) => {\r\n          item.push(doc.data())\r\n        })\r\n        setcollectFiles(item)\r\n      })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   app.auth().onAuthStateChanged((user) => {\r\n  //     setCurrent(user)\r\n  //   })\r\n  // }, [])\r\n\r\n  // console.log(current)\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='GeneralLoginDiv'>\r\n        <div className='SubGeneralLoginDiv'>\r\n          <div className='ContentHold'>\r\n            <div>\r\n              {hasAccount ? (\r\n                <>\r\n                  <div style={{ width: '300px', display: 'flex', flexDirection: 'column', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n\r\n\r\n                    {/* <div style={{ color: '#ddd' }}>Upload Image</div>\r\n                    <Input\r\n                      onClick={uploadImage}\r\n                      className='InputDiv'\r\n                      type='file'\r\n                      autoFocus\r\n                      required\r\n                      value={photoFileURL}\r\n                      onChange={(e) => setphotoFileURL(e.target.value)}\r\n                    /> */}\r\n\r\n\r\n                    <div style={{ color: '#ddd' }}>Name</div>\r\n                    <Input\r\n                      className='InputDiv'\r\n                      placeholder='Name'\r\n                      type='name'\r\n                      autoFocus\r\n                      required\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <div style={{ color: '#ddd' }}>UserName</div>\r\n                    <Input\r\n                      className='InputDiv'\r\n                      placeholder='Email'\r\n                      type='email'\r\n                      autoFocus\r\n                      required\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    {/* <p style={{ color: 'red', fontSize: '11px' }}> {emailError} </p> */}\r\n                    <div style={{ color: '#ddd' }}>Password</div>\r\n                    <Input\r\n                      className='InputDiv'\r\n                      placeholder='Password'\r\n                      type='password'\r\n                      value={password}\r\n                      required\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n\r\n                    <div style={{ color: '#ddd' }}>Short Bio</div>\r\n                    <TextArea\r\n                      className='InputDiv'\r\n                      placeholder='Short Bio'\r\n                      type='text'\r\n                      value={bio}\r\n                      required\r\n                      onChange={(e) => setBio(e.target.value)}\r\n                    />\r\n\r\n\r\n                    {/* <p style={{ color: 'red', fontSize: '11px' }}> {passwordError} </p> */}\r\n                    <Button onClick={handleSignUp} style={{ color: '#fff', fontWeight: 'bold', backgroundColor: '#4081ec' }}>Sign Up</Button>\r\n                    <p style={{ color: '#ddd' }}>Have An Account ? <span onClick={() => setHasAccount(!hasAccount)} style={{ color: 'yellow', cursor: 'pointer' }}>Sign In</span></p>\r\n\r\n                    <div>\r\n                      {collectFiles.map(({ name, password, email, bio }) => (\r\n                        <h1> {name} </h1>\r\n                        // <h2> {email} </h2>\r\n                        // <p> {bio} </p>\r\n                      ))\r\n\r\n                      }\r\n                    </div>\r\n\r\n                    <div>\r\n                      {\r\n                        current && <center>\r\n                          <h2 style={{ color: '#fff' }}> {current.displayName} </h2>\r\n                          <h4 style={{ color: '#fff' }}> {current.email} </h4>\r\n                          <img src={current.photoURL} alt='' style={{ height: '100px', width: '100px', borderRadius: '100px', objectFit: 'cover', backgroundColor: 'darkcyan' }} />\r\n                        </center>\r\n                      }\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div style={{ width: '300px', display: 'flex', flexDirection: 'column', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ color: '#ddd' }}>UserName</div>\r\n                    <Input\r\n                      className='InputDiv'\r\n                      placeholder='Email'\r\n                      type='email'\r\n                      autoFocus\r\n                      required\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    {/* <p style={{ color: 'red', fontSize: '11px' }}> {emailError} </p> */}\r\n                    <div style={{ color: '#ddd' }}>Password</div>\r\n                    <Input\r\n                      className='InputDiv'\r\n                      placeholder='Password'\r\n                      type='password'\r\n                      value={password}\r\n                      required\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    {/* <p style={{ color: 'red', fontSize: '11px' }}> {passwordError} </p> */}\r\n                    <Button onClick={handleLogin} style={{ color: '#fff', fontWeight: 'bold', backgroundColor: '#4081ec' }}>Sign In</Button>\r\n                    <p style={{ color: '#ddd' }}>Don't Have An Account ? <span onClick={() => setHasAccount(!hasAccount)} style={{ color: 'lightGreen', cursor: 'pointer' }} >Sign Up</span></p>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\Sammy\\Desktop\\React\\LateAuth\\build\\src\\Components\\Firebase\\Base.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":7,"nodeType":"37","messageId":"38","endLine":8,"endColumn":9},{"ruleId":"35","severity":1,"message":"39","line":19,"column":19,"nodeType":"37","messageId":"38","endLine":19,"endColumn":29},{"ruleId":"31","replacedBy":"40"},{"ruleId":"33","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'db' is assigned a value but never used.","Identifier","unusedVar","'setCurrent' is assigned a value but never used.",["42"],["43"],"no-global-assign","no-unsafe-negation"]